/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define WASD 1
#define SOCD_LEFT 2
#define SOCD_RIGHT 3
#define FL1 4
#define FL2 5

 ZMK_MACRO(socd_left,
         wait-ms = <0>;
         bindings
                 = <&macro_press &mo SOCD_LEFT &kp A>
                 , <&macro_pause_for_release>
                 , <&macro_release &mo SOCD_LEFT &kp A>;
 )

 ZMK_MACRO(socd_right,
         wait-ms = <0>;
         bindings
                 = <&macro_press &mo SOCD_RIGHT &kp D>
                 , <&macro_pause_for_release>
                 , <&macro_release &mo SOCD_RIGHT &kp D>;
 )

 ZMK_MACRO(override_left,
         wait-ms = <0>;
         bindings
                 = <&macro_press &kp A>
                 , <&macro_release &kp D>;
                 , <&macro_pause_for_release>
                 , <&macro_release &kp A>;
                 , <&macro_press &kp D>;
 )

 ZMK_MACRO(override_right,
         wait-ms = <0>;
         bindings
                 = <&macro_press &kp D>
                 , <&macro_release &kp A>;
                 , <&macro_pause_for_release>
                 , <&macro_release &kp D>;
                 , <&macro_press &kp A>;
 )

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB     &kp Q   &kp W   &kp F      &kp P       &kp B                  &kp J     &kp L      &kp U       &kp Y     &kp SEMI   &kp EQUAL
   &kp LSHFT   &kp A   &kp R   &kp S      &kp T       &kp G                  &kp M     &kp N      &kp E       &kp I     &kp O      &kp SQT
   &kp LCTRL   &kp Z   &kp X   &kp C      &kp D       &kp V                  &kp K     &kp H      &kp COMMA   &kp DOT   &kp FSLH   &tog WASD
                               &kp LGUI   &kp SPACE   &mo FL1                &mo FL2   &kp BSPC   &kp RET
                        >;
                };
                
                 game_layer {
                        bindings = <
   &kp ESC     &kp TAB     &kp Q        &kp W   &kp E          &kp R                  &kp T     &kp J      &kp L   &kp U       &kp Y     &kp SEMI
   &kp LCTRL   &kp LSHFT   &socd_left   &kp R   &socd_right    &kp F                  &kp G     &kp M      &kp N   &kp E       &kp I     &kp O
   &none       &kp LCTRL   &kp Z        &kp X   &kp C          &kp V                  &kp B     &kp K      &kp H   &kp COMMA   &kp DOT   &tog WASD
                                        &kp LGUI   &kp SPACE   &mo FL1                &mo FL2   &kp BSPC   &kp RET
                        >;
                };

                socd_left_layer {
                        bindings = <
   &kp ESC     &kp TAB     &kp Q   &kp W      &kp E             &kp R                  &kp T     &kp J      &kp L   &kp U       &kp Y     &kp SEMI
   &kp LCTRL   &kp LSHFT   &none   &kp R      &override_right   &kp F                  &kp G     &kp M      &kp N   &kp E       &kp I     &kp O
   &none       &kp LCTRL   &kp Z   &kp X      &kp C             &kp V                  &kp B     &kp K      &kp H   &kp COMMA   &kp DOT   &tog WASD
                                   &kp LGUI   &kp SPACE         &mo FL1                &mo FL2   &kp BSPC   &kp RET
                        >;
                };

                socd_right_layer {
                        bindings = <
   &kp ESC     &kp TAB     &kp Q            &kp W      &kp E       &kp R                  &kp T     &kp J      &kp L   &kp U       &kp Y     &kp SEMI
   &kp LCTRL   &kp LSHFT   &override_left   &kp R      &none       &kp F                  &kp G     &kp M      &kp N   &kp E       &kp I     &kp O
   &none       &kp LCTRL   &kp Z            &kp X      &kp C       &kp V                  &kp B     &kp K      &kp H   &kp COMMA   &kp DOT   &tog WASD
                                            &kp LGUI   &kp SPACE   &mo FL1                &mo FL2   &kp BSPC   &kp RET
                        >;
                };

                lower_layer {
                        bindings = <
   &kp ESC     &kp N1     &kp N2     &kp N3   &kp N4      &kp N5                &kp N6   &kp N7      &kp N8      &kp N9      &kp N0     &kp MINUS
   &kp LSHFT   &kp DOWN   &kp LEFT   &kp UP   &kp RIGHT   &none                 &none    &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp LBKT   &kp RBKT
   &kp LCTRL   &none      &none      &none    &none       &none                 &none    &kp KP_N1   &kp KP_N2   &kp KP_N3   &none      &kp PIPE
                                     &none    &none       &none                 &none    &kp KP_N0   &kp KP_DOT
                        >;
                };

                raise_layer {
                        bindings = <
   &kp F12     &kp F1              &kp F2           &kp F3            &kp F4             &kp F5                  &kp F6   &kp F7        &kp F8             &kp F9              &kp F10   &kp F11
   &kp LSHFT   &kp C_VOLUME_DOWN   &kp C_PREVIOUS   &kp C_VOLUME_UP   &kp C_NEXT         &none                   &none    &bt BT_CLR    &ext_power EP_ON   &ext_power EP_OFF   &kp A     &none
   &kp LCTRL   &none               &none            &none             &none              &none                   &none    &none         &none              &none               &none     &none
                    	                            &none             &kp C_PLAY_PAUSE   &kp LALT                &none    &none         &none
                        >;    
                };

        };
};
